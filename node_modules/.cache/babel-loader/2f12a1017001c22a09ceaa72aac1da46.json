{"ast":null,"code":"import { createElementObject, createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer(_ref, context) {\n  let {\n    url,\n    ...options\n  } = _ref;\n  const layer = new LeafletTileLayer(url, withPane(options, context));\n  return createElementObject(layer, context);\n}, function updateTileLayer(layer, props, prevProps) {\n  updateGridLayer(layer, props, prevProps);\n  const {\n    url\n  } = props;\n\n  if (url != null && url !== prevProps.url) {\n    layer.setUrl(url);\n  }\n});","map":{"version":3,"sources":["/Users/sidram/VSCODEFILES/youtube2022/node_modules/react-leaflet/lib/TileLayer.js"],"names":["createElementObject","createTileLayerComponent","updateGridLayer","withPane","TileLayer","LeafletTileLayer","createTileLayer","context","url","options","layer","updateTileLayer","props","prevProps","setUrl"],"mappings":"AAAA,SAASA,mBAAT,EAA8BC,wBAA9B,EAAwDC,eAAxD,EAAyEC,QAAzE,QAAyF,qBAAzF;AACA,SAASC,SAAS,IAAIC,gBAAtB,QAA8C,SAA9C;AACA,OAAO,MAAMD,SAAS,GAAGH,wBAAwB,CAAC,SAASK,eAAT,OAA+CC,OAA/C,EAAwD;AAAA,MAA/B;AAAEC,IAAAA,GAAF;AAAQ,OAAGC;AAAX,GAA+B;AACtG,QAAMC,KAAK,GAAG,IAAIL,gBAAJ,CAAqBG,GAArB,EAA0BL,QAAQ,CAACM,OAAD,EAAUF,OAAV,CAAlC,CAAd;AACA,SAAOP,mBAAmB,CAACU,KAAD,EAAQH,OAAR,CAA1B;AACH,CAHgD,EAG9C,SAASI,eAAT,CAAyBD,KAAzB,EAAgCE,KAAhC,EAAuCC,SAAvC,EAAkD;AACjDX,EAAAA,eAAe,CAACQ,KAAD,EAAQE,KAAR,EAAeC,SAAf,CAAf;AACA,QAAM;AAAEL,IAAAA;AAAF,MAAWI,KAAjB;;AACA,MAAIJ,GAAG,IAAI,IAAP,IAAeA,GAAG,KAAKK,SAAS,CAACL,GAArC,EAA0C;AACtCE,IAAAA,KAAK,CAACI,MAAN,CAAaN,GAAb;AACH;AACJ,CATgD,CAA1C","sourcesContent":["import { createElementObject, createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer({ url , ...options }, context) {\n    const layer = new LeafletTileLayer(url, withPane(options, context));\n    return createElementObject(layer, context);\n}, function updateTileLayer(layer, props, prevProps) {\n    updateGridLayer(layer, props, prevProps);\n    const { url  } = props;\n    if (url != null && url !== prevProps.url) {\n        layer.setUrl(url);\n    }\n});\n"]},"metadata":{},"sourceType":"module"}