{"ast":null,"code":"import { useEffect, useRef } from 'react';\nexport function createElementObject(instance, context, container) {\n  return Object.freeze({\n    instance,\n    context,\n    container\n  });\n}\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      const elementRef = useRef();\n      if (!elementRef.current) elementRef.current = createElement(props, context);\n      return elementRef;\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef();\n    if (!elementRef.current) elementRef.current = createElement(props, context);\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","map":{"version":3,"sources":["/Users/sidram/VSCODEFILES/youtube2022/node_modules/react-leaflet/node_modules/@react-leaflet/core/lib/element.js"],"names":["useEffect","useRef","createElementObject","instance","context","container","Object","freeze","createElementHook","createElement","updateElement","useImmutableLeafletElement","props","elementRef","current","useMutableLeafletElement","propsRef","updateElementProps"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,OAAO,SAASC,mBAAT,CAA6BC,QAA7B,EAAuCC,OAAvC,EAAgDC,SAAhD,EAA2D;AAC9D,SAAOC,MAAM,CAACC,MAAP,CAAc;AACjBJ,IAAAA,QADiB;AAEjBC,IAAAA,OAFiB;AAGjBC,IAAAA;AAHiB,GAAd,CAAP;AAKH;AACD,OAAO,SAASG,iBAAT,CAA2BC,aAA3B,EAA0CC,aAA1C,EAAyD;AAC5D,MAAIA,aAAa,IAAI,IAArB,EAA2B;AACvB,WAAO,SAASC,0BAAT,CAAoCC,KAApC,EAA2CR,OAA3C,EAAoD;AACvD,YAAMS,UAAU,GAAGZ,MAAM,EAAzB;AACA,UAAI,CAACY,UAAU,CAACC,OAAhB,EAAyBD,UAAU,CAACC,OAAX,GAAqBL,aAAa,CAACG,KAAD,EAAQR,OAAR,CAAlC;AACzB,aAAOS,UAAP;AACH,KAJD;AAKH;;AACD,SAAO,SAASE,wBAAT,CAAkCH,KAAlC,EAAyCR,OAAzC,EAAkD;AACrD,UAAMS,UAAU,GAAGZ,MAAM,EAAzB;AACA,QAAI,CAACY,UAAU,CAACC,OAAhB,EAAyBD,UAAU,CAACC,OAAX,GAAqBL,aAAa,CAACG,KAAD,EAAQR,OAAR,CAAlC;AACzB,UAAMY,QAAQ,GAAGf,MAAM,CAACW,KAAD,CAAvB;AACA,UAAM;AAAET,MAAAA;AAAF,QAAgBU,UAAU,CAACC,OAAjC;AACAd,IAAAA,SAAS,CAAC,SAASiB,kBAAT,GAA8B;AACpC,UAAID,QAAQ,CAACF,OAAT,KAAqBF,KAAzB,EAAgC;AAC5BF,QAAAA,aAAa,CAACP,QAAD,EAAWS,KAAX,EAAkBI,QAAQ,CAACF,OAA3B,CAAb;AACAE,QAAAA,QAAQ,CAACF,OAAT,GAAmBF,KAAnB;AACH;AACJ,KALQ,EAKN,CACCT,QADD,EAECS,KAFD,EAGCR,OAHD,CALM,CAAT;AAUA,WAAOS,UAAP;AACH,GAhBD;AAiBH","sourcesContent":["import { useEffect, useRef } from 'react';\nexport function createElementObject(instance, context, container) {\n    return Object.freeze({\n        instance,\n        context,\n        container\n    });\n}\nexport function createElementHook(createElement, updateElement) {\n    if (updateElement == null) {\n        return function useImmutableLeafletElement(props, context) {\n            const elementRef = useRef();\n            if (!elementRef.current) elementRef.current = createElement(props, context);\n            return elementRef;\n        };\n    }\n    return function useMutableLeafletElement(props, context) {\n        const elementRef = useRef();\n        if (!elementRef.current) elementRef.current = createElement(props, context);\n        const propsRef = useRef(props);\n        const { instance  } = elementRef.current;\n        useEffect(function updateElementProps() {\n            if (propsRef.current !== props) {\n                updateElement(instance, props, propsRef.current);\n                propsRef.current = props;\n            }\n        }, [\n            instance,\n            props,\n            context\n        ]);\n        return elementRef;\n    };\n}\n"]},"metadata":{},"sourceType":"module"}