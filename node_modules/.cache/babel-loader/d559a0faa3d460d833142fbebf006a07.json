{"ast":null,"code":"import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context.js';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, forwardedRef) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(forwardedRef, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, forwardedRef) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(forwardedRef, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, forwardedRef) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(forwardedRef, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","map":{"version":3,"sources":["/Users/sidram/VSCODEFILES/youtube2022/node_modules/react-leaflet/node_modules/@react-leaflet/core/lib/component.js"],"names":["React","forwardRef","useEffect","useImperativeHandle","useState","createPortal","LeafletProvider","createContainerComponent","useElement","ContainerComponent","props","forwardedRef","instance","context","current","children","createElement","value","createDivOverlayComponent","OverlayComponent","isOpen","setOpen","updateOverlay","update","contentNode","_contentNode","createLeafComponent","LeafComponent"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,mBAAvC,EAA4DC,QAA5D,QAA4E,OAA5E;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,eAAT,QAAgC,cAAhC;AACA,OAAO,SAASC,wBAAT,CAAkCC,UAAlC,EAA8C;AACjD,WAASC,kBAAT,CAA4BC,KAA5B,EAAmCC,YAAnC,EAAiD;AAC7C,UAAM;AAAEC,MAAAA,QAAF;AAAaC,MAAAA;AAAb,QAA0BL,UAAU,CAACE,KAAD,CAAV,CAAkBI,OAAlD;AACAX,IAAAA,mBAAmB,CAACQ,YAAD,EAAe,MAAIC,QAAnB,CAAnB;AACA,WAAOF,KAAK,CAACK,QAAN,IAAkB,IAAlB,GAAyB,IAAzB,GAAgC,aAAcf,KAAK,CAACgB,aAAN,CAAoBV,eAApB,EAAqC;AACtFW,MAAAA,KAAK,EAAEJ;AAD+E,KAArC,EAElDH,KAAK,CAACK,QAF4C,CAArD;AAGH;;AACD,SAAO,aAAcd,UAAU,CAACQ,kBAAD,CAA/B;AACH;AACD,OAAO,SAASS,yBAAT,CAAmCV,UAAnC,EAA+C;AAClD,WAASW,gBAAT,CAA0BT,KAA1B,EAAiCC,YAAjC,EAA+C;AAC3C,UAAM,CAACS,MAAD,EAASC,OAAT,IAAoBjB,QAAQ,CAAC,KAAD,CAAlC;AACA,UAAM;AAAEQ,MAAAA;AAAF,QAAgBJ,UAAU,CAACE,KAAD,EAAQW,OAAR,CAAV,CAA2BP,OAAjD;AACAX,IAAAA,mBAAmB,CAACQ,YAAD,EAAe,MAAIC,QAAnB,CAAnB;AACAV,IAAAA,SAAS,CAAC,SAASoB,aAAT,GAAyB;AAC/B,UAAIF,MAAJ,EAAY;AACRR,QAAAA,QAAQ,CAACW,MAAT;AACH;AACJ,KAJQ,EAIN,CACCX,QADD,EAECQ,MAFD,EAGCV,KAAK,CAACK,QAHP,CAJM,CAAT,CAJ2C,CAa3C;;AACA,UAAMS,WAAW,GAAGZ,QAAQ,CAACa,YAA7B;AACA,WAAOD,WAAW,GAAG,aAAcnB,YAAY,CAACK,KAAK,CAACK,QAAP,EAAiBS,WAAjB,CAA7B,GAA6D,IAA/E;AACH;;AACD,SAAO,aAAcvB,UAAU,CAACkB,gBAAD,CAA/B;AACH;AACD,OAAO,SAASO,mBAAT,CAA6BlB,UAA7B,EAAyC;AAC5C,WAASmB,aAAT,CAAuBjB,KAAvB,EAA8BC,YAA9B,EAA4C;AACxC,UAAM;AAAEC,MAAAA;AAAF,QAAgBJ,UAAU,CAACE,KAAD,CAAV,CAAkBI,OAAxC;AACAX,IAAAA,mBAAmB,CAACQ,YAAD,EAAe,MAAIC,QAAnB,CAAnB;AACA,WAAO,IAAP;AACH;;AACD,SAAO,aAAcX,UAAU,CAAC0B,aAAD,CAA/B;AACH","sourcesContent":["import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context.js';\nexport function createContainerComponent(useElement) {\n    function ContainerComponent(props, forwardedRef) {\n        const { instance , context  } = useElement(props).current;\n        useImperativeHandle(forwardedRef, ()=>instance);\n        return props.children == null ? null : /*#__PURE__*/ React.createElement(LeafletProvider, {\n            value: context\n        }, props.children);\n    }\n    return /*#__PURE__*/ forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n    function OverlayComponent(props, forwardedRef) {\n        const [isOpen, setOpen] = useState(false);\n        const { instance  } = useElement(props, setOpen).current;\n        useImperativeHandle(forwardedRef, ()=>instance);\n        useEffect(function updateOverlay() {\n            if (isOpen) {\n                instance.update();\n            }\n        }, [\n            instance,\n            isOpen,\n            props.children\n        ]);\n        // @ts-ignore _contentNode missing in type definition\n        const contentNode = instance._contentNode;\n        return contentNode ? /*#__PURE__*/ createPortal(props.children, contentNode) : null;\n    }\n    return /*#__PURE__*/ forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n    function LeafComponent(props, forwardedRef) {\n        const { instance  } = useElement(props).current;\n        useImperativeHandle(forwardedRef, ()=>instance);\n        return null;\n    }\n    return /*#__PURE__*/ forwardRef(LeafComponent);\n}\n"]},"metadata":{},"sourceType":"module"}